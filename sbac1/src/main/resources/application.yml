server:
  port: 8082

spring:
  boot:
    admin:
      client:
        url:  http://127.0.0.1:8081
        enabled: true
  application:
    name: servico1
  #security:
  #  user:
  #    name: eureka
  #    password: password

# username and password will be sent to eureka from where the spring boot admin will fetch
#{
#    "registration": {
#        "name": "FOO-SERVICE",
#        "managementUrl": "http://10.44.66.87:8080/actuator",
#        "healthUrl": "http://10.44.66.87:8080/actuator/health",
#        "serviceUrl": "http://10.44.66.87:8080/",
#        "source": "discovery",
#        "metadata": {
#            "user.name": "foo",
#            "management.port": "8080",
#            "jmx.port": "52698",
#            "user.password": "******"
#        }
#    }
#}


# When using Spring Cloud Discovery, you must be aware that anybody who can query your service registry can obtain the credentials.

eureka:
  instance:
    metadata-map:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}

  client:
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka/


# If Spring Security is on the classpath and no other WebSecurityConfigurerAdapter is present, the actuators are secured by Spring Boot auto-config.

management:
  endpoints:
    web.exposure.include: "*"
  endpoint:
    health:
      show-details: ALWAYS